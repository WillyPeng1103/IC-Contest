import numpy as np

f = open(r'''C:\Users\ASUS\Desktop\ic_contest\111_Graduatel_preliminary_laser\given\B\2023_grad_cell\img1.txt''')
text = f.read()
f.close

s = text.split('\n')

obj_x = np.array([]) #40 reg  4 紀錄有點點的地方
obj_y = np.array([]) #40 reg  4 紀錄有點點的地方
condi1_obj = np.array([]) #40 reg 1 紀錄cir1有框到的點點
condi2_obj = np.array([]) #40 reg 1 紀錄cir2有框到的點點
condi3_obj = np.array([]) #40 reg 1 tmp
for pos in s:
    x = pos.split(' ')
    obj_x = np.append(obj_x ,int(x[0]))
    obj_y = np.append(obj_y ,int(x[1]))
    condi1_obj = np.append(condi1_obj ,0)
    condi2_obj = np.append(condi2_obj ,0)
    condi3_obj = np.append(condi3_obj ,0)



cir_offset_x = np.array([-4,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,4]) #para??
cir_offset_y = np.array([0,-2,-1,0,1,2,-3,-2,-1,0,1,2,3,-3,-2,-1,0,1,2,3,-4,-3,-2,-1,0,1,2,3,4,-3,-2,-1,0,1,2,3,-3,-2,-1,0,1,2,3,-2,-1,0,1,2,0])


# for i in range(49):
#     if(int(cir_offset_y[i]) >= 0):
#         print("6'd" + str(i) + ": iter_y = cnt_cir1_pos_y + 5'd" + str(cir_offset_y[i]))
#     else:
#         print("6'd" + str(i) + ": iter_y = cnt_cir1_pos_y - 5'd" + str(abs(cir_offset_y[i])))
        
# print(len(cir_offset_x))
# for i in range(-4,5):
#     for j in range(-4,5):
#         dis = i**2 + j**2
#         if(dis <= 16):
#             print(str(j) + ',',end = '')
#######################################################################################################################################
################################################################ step1 ################################################################
#######################################################################################################################################
max_cnt = 0        # reg 6
max_total_cnt = 0  ## 每個iteration的total count  reg 6
tmp_total_cnt = 0  # 圈到的點數 reg 6

max1_cnt = 0     # cir1圈到的點數 reg 6
max1_pos_x = 0   # cir1的x  reg 4
max1_pos_y = 0   # cir1的y  reg 4

max2_cnt = 0     # cir2圈到的點數 reg 6
max2_pos_x = 0   # cir2的x  reg 4
max2_pos_y = 0   # cir2的y  reg 4

moving_cir = 0   # reg 1

coverg = False   #c.c

# ns1_pos_x = 0    
# ns1_pos_y = 0    
# ns2_pos_x = 0    
# ns2_pos_y = 0    
changed = 0      # reg 1 紀錄cir12 xy有無變化
#times = 0
while(not coverg):
    # ns1_pos_x = max1_pos_x
    # ns1_pos_y = max1_pos_y
    # ns2_pos_x = max2_pos_x
    # ns2_pos_y = max2_pos_y
    max_cnt = max_total_cnt
    changed = 0
    for cir1_pos_y in range(16):        # cir1_pos_y   reg 4
        for cir1_pos_x in range(16):    # cir1_pos_x   reg 4
            local_max_cnt = 0           # reg 6
            if(moving_cir == 0):
                tmp_total_cnt = max2_cnt
            else:
                tmp_total_cnt = max1_cnt
            ############################## 歸零 ##############################
            for iter in range(40): 
                condi3_obj[iter] = 0
            ############################## 歸零 ##############################
            ############################## 49個cycle ############################## 
            for iter in range(49): 
                iter_x = cir1_pos_x + cir_offset_x[iter]
                iter_y = cir1_pos_y + cir_offset_y[iter]
                if((iter_x >= 0) & (iter_x <= 15) & (iter_y >= 0)  & (iter_y <= 15)):
            ############################## 49個cycle ############################## 
            ############################## 比較器爆開 ############################## 用c.c
                    for prr in range(40):
                        if((iter_x == obj_x[prr]) & (iter_y == obj_y[prr])):
                            local_max_cnt = local_max_cnt + 1
                            condi3_obj[prr] = 1
                            if(moving_cir == 0):
                                if(condi2_obj[prr] == 0):
                                    tmp_total_cnt = tmp_total_cnt + 1
                            else:                
                                if(condi1_obj[prr] == 0):
                                    tmp_total_cnt = tmp_total_cnt + 1
                            break
            ############################## 比較器爆開 ##############################
            ############################## modify ##############################
            if(tmp_total_cnt >= max_total_cnt):
                max_total_cnt = tmp_total_cnt         #目前有被選到的點數
                if(moving_cir == 0):
                    if(max1_pos_x != cir1_pos_x or max1_pos_y != cir1_pos_y):
                        changed = 1
                    max1_cnt = local_max_cnt
                    max1_pos_x = cir1_pos_x           #c1的x 是目前有被選到的
                    max1_pos_y = cir1_pos_y           #c1的y 是目前有被選到的
                    condi1_obj = np.copy(condi3_obj)  #condi1 是目前有被選到的
                else:
                    if(max2_pos_x != cir1_pos_x or max2_pos_y != cir1_pos_y):
                        changed = 1
                    max2_cnt = local_max_cnt                
                    max2_pos_x = cir1_pos_x           #c1的x 是目前有被選到的
                    max2_pos_y = cir1_pos_y           #c1的y 是目前有被選到的
                    condi2_obj = np.copy(condi3_obj)  #condi2  
            ############################## modify ##############################
    if(moving_cir == 0):
        moving_cir = 1
    else:
        moving_cir = 0
    
    coverg = (max_cnt == max_total_cnt) & (changed == 0)  #(ns1_pos_x == max1_pos_x) & (ns1_pos_y == max1_pos_y) & (ns2_pos_x == max2_pos_x) & (ns2_pos_y == max2_pos_y)
    # print(coverg)
    # print(max_total_cnt)
    # # print(condi1_obj)
    # # print(condi2_obj)
    # print(max1_pos_x,max1_pos_y)
    # print(max2_pos_x,max2_pos_y)
    # print('-------------------------------------')
    # print(max_cnt)
    # print(max1_pos_x,max1_pos_y)
    # print(max2_pos_x,max2_pos_y)

# for iter in range(40): 
    #print(int(condi1_obj[iter]) | int(condi2_obj[iter]) , end=" ")
    
# print(condi1_obj)
# print(condi2_obj)

# print(times)

#######################################################################################################################################
################################################################ step2 ################################################################
#######################################################################################################################################

#確認iteration的condi_obj有沒有正確回到原本的值

#1   4
#2   5
#3   6
#4   7
#5   7
#6   6

#total = 35 times